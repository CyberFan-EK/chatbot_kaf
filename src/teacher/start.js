const words = require('../../word');
const teachersBD = require('../../teacherBD');
const { Markup } = require('telegraf');
module.exports = (bot) => {
  bot.hears(words.wordTeachers, async (ctx) => {
    let name = '';
    let surname = '';
    if (ctx.from.first_name) name = ctx.from.first_name;
    if (ctx.from.last_name) surname = ctx.from.last_name;
    const buttonsTeach = Markup.keyboard([
      ['–ó–∞–≤—ñ–¥—É–≤–∞—á –∫–∞—Ñ–µ–¥—Ä–∏'],
      ['–í–∏–∫–ª–∞–¥–∞—á—ñ (—Å–ø—ñ–≤—Ä–æ–±—ñ—Ç–Ω–∏–∫–∏)'],
      ['–†–æ–∑–∫–ª–∞–¥ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ–π'],
      ['‚¨ÖÔ∏è –ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é'],
    ])
      .oneTime()
      .resize();

    await ctx.reply(`–ü—Ä–∏–≤—ñ—Ç, ${name} ${surname}!üëã`);
    await ctx.reply(
      `–ö–∞—Ñ–µ–¥—Ä—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ–π–Ω–æ—ó –µ–∫–æ–Ω–æ–º—ñ–∫–∏, –ø—ñ–¥–ø—Ä–∏—î–º–Ω–∏—Ü—Ç–≤–∞ —Ç–∞ —Ñ—ñ–Ω–∞–Ω—Å—ñ–≤ —Å—Ç–≤–æ—Ä–µ–Ω–æ —É 2020 —Ä. –Ω–∞ –±–∞–∑—ñ —Ç—Ä—å–æ—Ö –∫–∞—Ñ–µ–¥—Ä ‚Äì –µ–∫–æ–Ω–æ–º—ñ–∫–∏ —Ç–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ–π–Ω–∏—Ö —Ç–µ—Ö–Ω–æ–ª–æ–≥—ñ–π; —Ñ—ñ–Ω–∞–Ω—Å—ñ–≤, –±–∞–Ω–∫—ñ–≤—Å—å–∫–æ—ó —Å–ø—Ä–∞–≤–∏ —Ç–∞ —Å—Ç—Ä–∞—Ö—É–≤–∞–Ω–Ω—è; –µ–∫–æ–Ω–æ–º—ñ–∫–∏ –ø—ñ–¥–ø—Ä–∏—î–º—Å—Ç–≤–∞ –∑ –º–µ—Ç–æ—é –ø–æ–¥–∞–ª—å—à–æ—ó –º–æ–¥–µ—Ä–Ω—ñ–∑–∞—Ü—ñ—ó –æ—Å–≤—ñ—Ç–Ω—ñ—Ö –ø—Ä–æ–≥—Ä–∞–º —É –Ω–∞–ø—Ä—è–º—É –Ñ–≤—Ä–æ—ñ–Ω—Ç–µ–≥—Ä–∞—Ü—ñ—ó —Ç–∞ —Ä–æ–∑–≤–∏—Ç–∫—É –º—ñ–∂–Ω–∞—Ä–æ–¥–Ω–æ—ó –¥—ñ—è–ª—å–Ω–æ—Å—Ç—ñ`
    );
    await ctx.reply(
      `–°—å–æ–≥–æ–¥–Ω—ñ –∫–∞—Ñ–µ–¥—Ä–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ–π–Ω–æ—ó –µ–∫–æ–Ω–æ–º—ñ–∫–∏, –ø—ñ–¥–ø—Ä–∏—î–º–Ω–∏—Ü—Ç–≤–∞ —Ç–∞ —Ñ—ñ–Ω–∞–Ω—Å—ñ–≤ ‚Äì —Å—É—á–∞—Å–Ω–∏–π –∫–æ–ª–µ–∫—Ç–∏–≤ –≤–∏—Å–æ–∫–æ–∫–≤–∞–ª—ñ—Ñ—ñ–∫–æ–≤–∞–Ω–∏—Ö —Ñ–∞—Ö—ñ–≤—Ü—ñ–≤, —è–∫–∏–π –æ–±‚Äô—î–¥–Ω—É—î 2 –¥–æ–∫—Ç–æ—Ä–∏ –Ω–∞—É–∫, 13 –∫–∞–Ω–¥–∏–¥–∞—Ç—ñ–≤ –Ω–∞—É–∫, –≤–∏–∫–ª–∞–¥–∞—á–∞ ‚Äì —Ñ—ñ–ª–æ–ª–æ–≥–∞, —Å—Ç–∞—Ä—à–æ–≥–æ –ª–∞–±–æ—Ä–∞–Ω—Ç–∞ (–≤–∏–∫–ª–∞–¥–∞—á–∞ ‚Äì —Ñ—ñ–ª–æ–ª–æ–≥–∞); –∑–∞–ª—É—á–∞—î –¥–æ –æ—Å–≤—ñ—Ç–Ω—å–æ–≥–æ –ø—Ä–æ—Ü–µ—Å—É —Å—Ç–µ–π–∫—Ö–æ–ª–¥–µ—Ä—ñ–≤ ‚Äì –ø—Ä–æ—Ñ–µ—Å—ñ–æ–Ω–∞–ª—ñ–≤, –¥–æ–∫—Ç–æ—Ä—ñ–≤ —Ç–∞ –∫–∞–Ω–¥–∏–¥–∞—Ç—ñ–≤ –Ω–∞—É–∫.`,
      buttonsTeach
    );
  });

  bot.hears(words.wordZavKaf, async (ctx) => {
    const buttonsBack = Markup.keyboard([['‚¨ÖÔ∏è –í–∏–∫–ª–∞–¥–∞—á—ñ']])
      .oneTime()
      .resize();
    await ctx.reply(
      `–ì–ª—É—â–µ–≤—Å—å–∫–∏–π –í'—è—á–µ—Å–ª–∞–≤ –í–∞–ª–µ–Ω—Ç–∏–Ω–æ–≤–∏—á
  –¥–æ–∫—Ç–æ—Ä –µ–∫–æ–Ω–æ–º—ñ—á–Ω–∏—Ö –Ω–∞—É–∫, –ø—Ä–æ—Ñ–µ—Å–æ—Ä`
    );
    await ctx.replyWithPhoto({ source: 'img/teacher/gluschevs.jpg' });
    await ctx.reply(
      `–ê–¥—Ä–µ—Å–∞: 69006, –º. –ó–∞–ø–æ—Ä—ñ–∂–∂—è, –ø—Ä–æ—Å–ø. –°–æ–±–æ—Ä–Ω–∏–π, 226 (10 –∫–æ—Ä–ø., –∫. –õ318)
  T–µ–ª.: (067) 921-30-70
  E-mail: gluschevsky@ukr.net`,
      buttonsBack
    );
  });

  bot.hears(words.wordTeacher, async (ctx) => {
    const buttonsBack = Markup.keyboard([['‚¨ÖÔ∏è –í–∏–∫–ª–∞–¥–∞—á—ñ']])
      .oneTime()
      .resize();

    const buttonTeachArr = teachersBD.map((item, index, arr) => {
      return [{ text: item.name, callback_data: item.id }];
    });

    const buttonBDteacher = {
      reply_markup: {
        inline_keyboard: buttonTeachArr,
      },
    };

    await ctx.reply('–°–ø—ñ–≤—Ä–æ–±—ñ—Ç–Ω–∏–∫–∏ –∫–∞—Ñ–µ–¥—Ä–∏:', buttonBDteacher);

    await ctx.reply(`–ê–¥—Ä–µ—Å–∞: 69006, –º. –ó–∞–ø–æ—Ä—ñ–∂–∂—è, –ø—Ä–æ—Å–ø. –°–æ–±–æ—Ä–Ω–∏–π, 226`, buttonsBack);
  });

  teachersBD.forEach((teach) => {
    bot.action(teach.id, async (ctx) => {
      const buttonsBack = Markup.keyboard([['–í–∏–∫–ª–∞–¥–∞—á—ñ (—Å–ø—ñ–≤—Ä–æ–±—ñ—Ç–Ω–∏–∫–∏)'], ['‚¨ÖÔ∏è –ú–µ–Ω—é']])
        .oneTime()
        .resize();

      const listSubjects = teach.subject.join(',\n ');

      await ctx.reply(
        `${teach.name} 
  ${teach.phd}`
      );
      await ctx.replyWithPhoto({ source: teach.foto });
      await ctx.reply(`–û—Å–Ω–æ–≤–Ω—ñ –¥–∏—Å—Ü–∏–ø–ª—ñ–Ω–∏:\n ${listSubjects}`);
      await ctx.reply(`–ß–∞—Å–∏ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—ó: \n ${teach.konsult}`);
      await ctx.reply(`–ë—ñ–æ–≥—Ä–∞—Ñ—ñ—è: \n ${teach.biograf}`, buttonsBack);
      await ctx.reply(`–ù–∞—É–∫–æ–≤—ñ —ñ–Ω—Ç–µ—Ä–µ—Å–∏:\n ${teach.science}`, buttonsBack);
    });
  });
};
